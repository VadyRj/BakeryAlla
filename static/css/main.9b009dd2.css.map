{"version":3,"file":"static/css/main.9b009dd2.css","mappings":"AAAA,KAKE,kCAAmC,CACnC,iCAAkC,CAJlC,mIAEY,CAHZ,QAMF,CAEA,KACE,uEAEF,CC4IA,uBAGE,wBAAiC,CAQjC,aAAyB,CADzB,sBAEF,CAEA,gBAIE,YAAQ,CAHR,YAAa,CAGb,OAAQ,CAOR,8EAIiB,CARjB,yBAA4B,CAC5B,qDAAuD,CANvD,gBAAiB,CAejB,OASE,iBAAkB,CAPlB,YAAa,CADb,gBAAiB,CAEjB,2CAA6C,CAC7C,sBAAuB,CAMvB,iBAAkB,CAFlB,mBAMF,CAEA,MAQE,oBAAgB,CAIhB,kBAAmB,CAEnB,iBAAkB,CANlB,eAAgB,CADhB,cAAe,CANf,eAAgB,CAUhB,qBAAsB,CANtB,sBAAyB,CACzB,uBAUF,CAEA,WAhBE,YAAa,CAab,sBAcF,CAXA,KAME,aAAS,CAAT,QAAS,CALT,cAAe,CAQf,oBAAqB,CAFrB,sCAAwC,CACxC,mCAA8E,CAH9E,YAMF,CAEA,OAEE,YAAa,CADb,gBAAiB,CAEjB,6BAA8B,CAC9B,qBAAsB,CAEtB,iBAAkB,CADlB,gBAEF,CACF,CAIA,sBAUE,aAAS,CAHT,kBAAmB,CANnB,YAAa,CASb,QAAS,CACT,qBAAsB,CATtB,iCAAmC,CACnC,sBAAuB,CAGvB,oBAAsB,CADtB,iBASF,CAIA,qBAGC,QAAW,CADX,gBAAiB,CAEjB,gBACD,CAEA,yBACC,mBACC,aAAc,CACd,iBACD,CACD,CAEA,0BACC,qBACC,eACD,CACD,CAEA,uBACC,qBACC,eACD,CACD,CAEA,uBACC,qBACC,gBACD,CACD,CA6BA,UAOE,oBAAqB,CAFrB,WAAY,CACZ,UAEF,CAGA,SACE,WAAY,CACZ,UACF,CAGA,aACE,aACF","sources":["index.css","components/App/main.css"],"sourcesContent":["body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n","/* Сетка */\n\n/* .grid { */\n/* display: grid;\n  height: 100%;\n  min-height: 100vh;\n  минимальная область просмотра\n  min-height: 100vh;    минимальная область просмотра\n  align-items: stretch;\n  стандартные \n  grid-template-columns: 100px 100px 100px;  колонки\n  grid-template-columns: 50px 200px 50px 1fr;  колонки\n  grid-template-columns: 2fr 1fr 1fr;  фракции \n  grid-template-columns: 2fr 150px 1fr;  фракции c пикселями\n\n  grid-template-columns: 50px 200px 50px 1fr;  колонки\n  grid-template-rows: 100px 100px 100px ;  ряды\n\n  grid-template-columns: 200px 200px 200px;\n  grid-template-rows: 100px ;\n  grid-auto-rows: 100px; */\n\n/* ОТСТУП МЕЖДУ РЯДАМИ И КОЛОНКАМИ\n  column-gap: 50px;\n  row-gap: 50px;\n  grid-gap: 50px 50px;  сокращенно !!!. отступ = колонки / ряды\n  gap: 50px 50px; или так\n  gap: 50px;  -  авто -одинаковый отступ у колонок и рядов  */\n\n/* REPEAT() сокращает код\n  grid-template-columns: repeat(3, 1fr);          тоже самое (3 повторения + размер 1 фракция)\n  grid-template-columns: repeat(3, 100px);         тоже самое (3 повторения + размер )\n  grid-template-columns: repeat(2, 50px 200px);  тоже самое ( 2 повторения  по данным размерам = 4 колонки !) \n  grid-template: repeat(3, minmax(70px, 300px)) / repeat(3, minmax(70px, 300px))\n  */\n\n/* MINMAX  -  например чтобы контент не вываливался из блока\n  grid-template-columns: minmax(100px, 500px) 100px 100px 100px;    блок - растяжка = (не меньше 100px, не больше 500px ) \n  grid-template-rows: 200px minmax(100px,  auto) 100px;      блок растягивается  по  КОНТЕНТУ в нем \n  grid-template: repeat(3, minmax(70px, 300px)) / repeat(3, minmax(70px, 300px))\n  */\n\n/* GRID-AUTO-FLOW   -  НАПРАЛЕНИЕ КОНТЕНТА \n  grid-auto-flow: row;  значение по умолчанию контент выстраивается в ряды...\n  grid-auto-flow: column;  выстраивание в колонку */\n\n/* ЯВНАЯ И  НЕ ЯВНАЯ СЕТКА   - \"лишние, не описанные блоки или сетка из блоков\"\n  grid-template-columns: 200px 200px 200px;  - явная сетка\n  grid-template-rows: 100px 100px;   - явная сетка \n  grid-auto-flow: column;    -НАПРИМЕР  меняем направление сетки  т.е. \n  grid-auto-columns: 200px;   размер для  не явной сетки\n  grid-auto-rows: 100px;     размер для  не явной сетки */\n\n/* auto-fill   АВТОМАТИЧЕСКОЕ КОЛ-ВО КОЛОНОК НА ЭКРАНЕ, перенос ячеек на строки\n  grid-template-columns: repeat(auto-fill, 100px);\n  grid-template-columns: repeat(auto-fill, minmax(50px, 1fr)); - ПЕРЕНОСИТ на новую строку при сужении экрана*/\n\n/* auto-fit   АВТОМАТИЧЕСКОЕ КОЛ-ВО КОЛОНОК НА ЭКРАНЕ, перенос ячеек на новые строки, занимая все доступ. пространство\n  grid-template-columns: repeat(auto-fit, minmax(50px, 1fr));  - РАСТЯГИВАЕТ блоки (контент) по строке при изм. разм. экрана  */\n\n/* ВЫРАВНИВАНИЕ ЯЧЕЕК внутри колонок и рядов (по умолчанию они тянутся на всю ширину колонки и ряда)\n  justify-items: stretch;  значения по умолчанию   - ряд тянется по всей длине\n  align-items: stretch;    значения по умолчанию  - колонки тянутся по всей вертикали\n  === start, end, center, strech     - все возможные параметры !!!\n  justify-items: end;\n  align-items: stretch; \n\n  grid-template-columns: 200px 200px  200px 200px;\n  grid-template-rows: minmax(70px, auto);\n  gap: 20px;    общий */\n\n/* GRID-TEMPLATE   -  сокращенная запись колонок и рядов сетки\n  grid-template: РЯДЫ / КОЛОНКИ;  \n  grid-template: 150px 150px 150px 150px / 150px 150px 150px 150px;  \n  grid-template: repeat(4, 150px) / repeat(4, 150px); \n  grid-template: repeat(3, minmax(70px, 300px)) / repeat(3, minmax(70px, 300px))\n */\n\n/* GRID-AREAS  -  структра страницы\n  display: grid;\n  gap: 5px;\n  grid-template-columns: 150px 1fr;\n  grid-template-rows: 100px 1fr 100px;\n\n  grid-template-areas:   - Прописываем теги-области которые таблицы\n    \"header header \"\n    \"aside main\"\n    \"footer footer\";\n\n  header {               - Указываем для каждого  соотв. тега значение из grid-template-areas\n    grid-area: header;\n  }\n  aside {\n    grid-area: aside;\n  }\n  main {\n    grid-area: main;\n  }\n  footer {\n    grid-area: footer;\n  } */\n/* } */\n\n/* ПОЗИЦИОНИРОВАНИЕ ЯЧЕЕК ПО ЛИНИИ СЕТКИ */\n/* .grid > div:nth-child(1) {\ngrid-column-start: 1;    - ОТ линии сетки по колонке\ngrid-column-end: -1;     - ДО линии сетки по колонке\ngrid-column: 1 / -1;     - сокращенно ОТ / ДО\n  grid-row: 2;              - по 2му ряду    \n}\n.grid > div:nth-child(2) {\ngrid-column: 2 / 4;    - так блок подвинется, оставив свободное место\ngrid-row: 3 ;   - так блок обозначит свою \"координату в сетке\" и свободное место займется другим блоком по очереди\ngrid-row: 1;\n} */\n\n/* Позиционирование конкретных ячеек (к теме - Выравнивание ячеек) */\n/* .grid > div:nth-child(6) {\ngrid-column: 2;\ngrid-row: 2;\njustify-self: start;      - ряд(горизонталь)\nalign-self: start;          - колонка(вертикаль)\n}\n+ Помещаем два блока в одну ячейку\n.grid > div:nth-child(9){ \ngrid-column: 2;\ngrid-row: 2;\njustify-self: end;   \nalign-self: end;   - блок внутри ячейки     \nalign-content: end;   - контент внутри блока    \n}  */\n\n\n/* html {\n\theight: 100%;\n} */\n\n/* body {\n\theight: 100%;\n\tmargin: 0;\n\tpadding: 0;\n\tbackground: #fff;\n\tfont-family: 'Open Sans', sans-serif;\n} */\n\n/* html,\nbody {\n  height: 100%;\n  width: 100%;\n  margin: 0 auto;\n} */\n\nhtml,\n.grid-container * {\n  /* padding: 20px 20px; */\n  background-color: rgb(81, 67, 54);\n    /* background-color: rgb(71, 81, 54);  */\n  /* background-color: rgb(85, 110, 45);  */\n  /* background-color: rgb(182, 98, 151);  */\n  /* border: 1px solid rgb(255, 255, 255); */\n  /* text-align: end; */\n  /* font-size: 16px; */\n  font-family: sans-serif;\n  color: rgb(212, 228, 227);\n}\n\n.grid-container {\n  display: grid;\n  min-height: 100vh;\n  /* height: 100%; */\n  gap: 8px;\n  /* grid-template-columns: 1fr; */\n  /* grid-template-rows: 100px 30px minmax(300px, auto) 100px; */\n  grid-template-columns: 1fr  ;\n  grid-template-rows: 100px 30px minmax(300px, auto) auto;\n  /* grid-template-rows: 1fr 1fr 1fr 1fr; */\n\n  grid-template-areas:\n    \"header header \"\n    \"aside aside\"\n    \"main main\"\n    \"footer footer\";\n\n  header {\n    grid-area: header;\n    display: grid;\n    grid-template-columns: 1fr minmax(10px, auto);\n    grid-template-rows: 1fr;\n    /* align-self: center; */\n    /* justify-self: center; */\n\n    text-justify: center;\n    align-items: start;\n    padding-left: 50px;\n\n    /* align-items: center; */\n    /* justify-content: end; */\n  }\n\n  aside {\n    grid-area: aside;\n    display: grid;\n    /* grid-template-columns: repeat(6, minmax(360px,auto)); */\n    /* grid-template-columns: 1fr; */\n    grid-template-rows: 1fr  ;\n    grid-template-rows: 44px;\n    font-size: 20px;\n    column-gap: 25px;\n\n    /* grid-auto-flow: auto; */\n    grid-auto-flow: column; /* направление контента row / column /dence. Если эл. много, они разм. внутри блока */\n    align-items: center;\n\n    align-self: center;\n    justify-content: center;\n  }\n\n  main {\n    grid-area: main;\n    /* min-height: 100vh; */\n    /* height: 100%; */\n    display: grid;\n    padding: 50px;\n    gap: 20px;\n    grid-template-columns: minmax(1fr, auto);\n    grid-template-rows: minmax(1fr, auto) /* repeat(300px, minmax(100px, auto)) */;  /* автоматическое кол-во рядов  */\n    grid-auto-rows: 300px;  /* не явные грид блоки - ширина рядов */\n    justify-content: center;\n  }\n\n  footer {\n    grid-area: footer;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    justify-content: start;\n    text-align: start;\n    padding: 10px 20px;\n  }\n}\n\n\n/* Блоки с позицией  в main*/\n.grid-container_items {\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr ;\n  grid-template-rows: 1fr;\n\n  text-align: center;\n  justify-items: center ;  /* выравнивание по контента  по горизонтали !!! Главная ось зависит от значения grid-template-rows.   */\n  align-items: center;  /* выравнивание по контента  по вертикали !!! */\n  /* justify-content: strech;  */\n\n  gap: 10px;\n  grid-auto-flow: column; /* направление контента row / column /dence. Если эл. много, они разм. внутри блока */\n  /* padding: 10px; */\n  /* align-items: auto; */\n}\n\n\n/*  НЕ РЕАЛИЗОВАНО! */\n.container-table_mob {\n\t/*  оптимизация */\n\tmax-width: 1200px;\n\tmargin: 0px;\n\tpadding: 0px-15px\n}\n\n@media (max-width: 576px) {\n\t.white-plate__logo {\n\t\tdisplay: block;\n\t\ttext-align: center;\n\t}\n}\n\n@media (max-width:1200px) {\n\t.container-table_mob {\n\t\tmax-width: 970px;\n\t}\n}\n\n@media (max-width:992) {\n\t.container-table_mob {\n\t\tmax-width: 750px;\n\t}\n}\n\n@media (max-width:767) {\n\t.container-table_mob {\n\t\tmax-width: center;\n\t}\n}\n\n\n\n/* ячейки в header */\n/* .grid-container > header:nth-child(1){\n  grid-column: 2;\n  justify-content: end;\n  align-self: start;\n  justify-self: start;\n} */\n\n/* Картинка в блоках main */\n/* .grid-container_items:nth-child(1) {\n  grid-template-columns: 1fr 1fr 1fr;\n  grid-template-rows: 100px 100px;\n} */ \n\n /* Состав в блоках main  */\n/*  .grid-container > main .grid-container_items:nth-child(3) {    - работает !!! \n .grid-container_items:nth-child(0) { \n   align-items: end;   вертикаль!  -  выравнивает элем. сетки вдоль блочной оси  \n   grid-auto-flow: column; направление контента row / column /dence. Если эл. много, они разм. внутри блока \n   justify-self: center;  сетка внутри ячейки \n   justify-items: end; \n   grid-row-start: 1; \n}  */\n\n\n.main-fon {\n  /* background: rgb(224, 198, 198) no-repeat center center fixed; */\n  /* background:  rgb(81, 67, 54) no-repeat center center fixed; */\n   /* Фон - подфон */\n  /* background: rgb(202, 147, 195);  */\n  height: 100%;\n  width: 100%;\n  background-size: 100%;\n}\n\n/* все кнопки в блоках товаров в main*/\np button{\n  height: 25px;\n  width: 50px;\n}\n\n/* Выделение кнопок в Aside */\n.color-aside{\n  color: rgb(212, 139, 43);\n}\n\n/* =================================================== */\n/* .container *{\n  background-color: rgb(41, 32, 24);\n  border: 1px solid rgb(255, 255, 255) ;\n  font-family: sans-serif;\n  color: rgb(255, 255, 255);\n}\n\n.container {\n  display: grid; \n  min-height: 100vh;\n  height: 100%;\n  gap: 1px;\n  grid-auto-columns: 1fr; \n  grid-auto-rows: 1fr; \n  grid-template-columns: 1fr; \n  grid-template-rows: 0.2fr 0.3fr 3.1fr 0.4fr; \n  gap: 0px 0px; \n  grid-template-areas: \n    \"header\"\n    \"aside\"\n    \"main\"\n    \"footer\"; \n}\n.header {\n  display: grid; \n  grid-template-columns: 1.1fr 0.8fr 1.1fr; \n  grid-template-rows: 1fr; \n  gap: 0px 0px; \n  grid-template-areas: \n    \". . .\"; \n  justify-self: stretch; \n  grid-area: header; \n}\n.aside {\n  display: grid; \n  grid-auto-flow: column; \n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr 1fr; \n  grid-template-rows: 1fr; \n  gap: 0px 0px; \n  grid-template-areas: \n    \". . . . . .\"; \n  justify-items: center; \n  justify-self: center; \n  align-self: stretch; \n  grid-area: aside; \n}\n.main {\n  display: grid; \n  grid-auto-rows: 1fr; \n  grid-template-columns: 1fr 1fr 1fr; \n  grid-template-rows: 1fr 1fr; \n  gap: 0px 0px; \n  grid-template-areas: \n    \"img-item  item  price\"\n    \". . .\"; \n  grid-area: main; \n}\n.img-item {\n  display: grid; \n  grid-template-columns: 1fr; \n  grid-template-rows: 1fr; \n  gap: 0px 0px; \n  grid-template-areas: \n    \".\"; \n  justify-self: center; \n  align-self: center; \n  grid-area: img-item; \n}\n.item {\n  display: grid; \n  grid-template-columns: 1fr 1fr 1fr; \n  grid-template-rows: 1fr 1fr 1fr; \n  gap: 0px 0px; \n  grid-template-areas: \n    \". . .\"\n    \". . .\"\n    \". . .\"; \n  justify-self: center; \n  align-self: center; \n  grid-area: item; \n}\n.price {\n  justify-self: center; \n  align-self: center; \n  grid-area: price; \n}\n.footer {\n  display: grid; \n  grid-template-columns: 1.5fr 0.5fr 1fr; \n  grid-template-rows: 1fr; \n  gap: 0px 0px; \n  grid-template-areas: \n    \". . .\"; \n  justify-self: stretch; \n  align-self: stretch; \n  grid-area: footer; \n} */\n\n\n\n"],"names":[],"sourceRoot":""}